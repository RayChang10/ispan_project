"Question","Answer"
"What's the difference between a `tuple` and a `list`?","Both tuples and lists are data structures in Python and hold a list of values. Unlike lists, tuples are immutable - they can't be changed."
"What is a `dict` and what's its most important limitation?","A `dict` is a structure akin to a hash map. It stores key-value pairs, where keys are unique and it has O(1) access time. The most important limitation for a `dict` is that the keys must be hashable/immutable. Meaning, we can use a tuple as a key, but not a list."
"What is a \"callable\"?","A callable is an object we can call - function or an object implementing the `__call__` special method. Any object can be made callable."
"Using list comprehension, print the odd numbers between 0 and 100.","[a for a in range(0, 100) if a % 2]"
"What is pickling/unpickling?","Pickling is converting an object to a string representation in Python. Generally used for caching and transferring objects between hosts/processes."
"What's a generator?","A generator is a callable object that acts as an iterable (object you can iterate in for cycles, etc.)."
"Explain the use of decorators.","Decorators in Python are used to modify or inject code in functions or classes. They allow wrapping a class or function method call so that a piece of code can be executed before or after the execution of the original code. Decorators can be used to check for permissions, modify or track the arguments passed to a method, logging the calls to a specific method, etc."
"Write a simple decorator.","def paragraph_wrap(func): def func_wrapper(name): return \"<p>{0}</p>\".format(func(name)) return func_wrapper @paragraph_wrap def get_text(name): return \"lorem ipsum, {0} dolor sit amet\".format(name) print(get_text(\"John\"))"
"Suppose lst is `[2, 33, 222, 14, 25]`, What is `lst[-1]`?","`lst[-1]` is `25`. Negative numbers mean that you count from the right instead of the left. So, `lst[-1]` refers to the last element."
"Given the list `lst = [1, 2, 3, 4, 4, 6, 7, 3, 4, 5, 2, 7]`, return only the unique values in the list.","`set(lst)` - one answer. The limitation of this solution is that values should be hashable. Another answer is to iterate through the list and use an intermediate list to store the current value, checking if it's already added."
"Explain `*args` and `**kwargs`.","When a function is declared `def my_func(*args, **kwargs)`, `args` is a `tuple` with all positional arguments passed to the function and `kwargs` is a `dict` with all keyword arguments. They can be named anything as long as the unpack operators `*` and `**` are used. `*` unpacks a `tuple` and `**` unpacks a `dict`."
"Is this valid in Python and why?","def my_function(): print(my_function.what) my_function.what = \"right?\" my_function() # Prints \"right?\" It is valid. In Python, everything is an object, including functions."
"Given variables a and b, switch their values so that b has the value of a, and a has the value of b without using an intermediary variable.","(請補充詳細內容)"
"How would you `xor` in Python?","(a and not b) or (not a and b) bool(a) != bool(b) bool(a) ^ bool(b) from operator import xor; xor(bool(a), bool(b))"
"What is introspection/reflection and does Python support it?","Introspection is the ability to examine an object at runtime. Python has functions like `dir()`, `type()`, and `isinstance()` that support examining the attributes of an object. Reflection allows modifying objects at runtime and accessing them dynamically, e.g., `setattr()` and `getattr()`."
"One thing about Python OOP is that it doesn't support true private attributes/methods. How do we circumvent this limitation?","There is a convention: if we prefix the name with an underscore, it's considered private."
"What's a metaclass?","In Python, everything is an object, including classes, which are instances of something - a metaclass. The default metaclass is `type`."
"What are the Dunder/Magic/Special methods in Python? Name a few.","Dunder methods are special/magic predefined methods in Python, with names that start and end with a double underscore. Examples include: `__init__` - constructor, `__str__`, `__repr__` - object representation, `__len__`, `__next__` - generators, `__enter__`, `__exit__` - context managers, `__eq__`, `__lt__`, `__gt__` - operator overloading."
"CheeseShop? What is that?","CheeseShop is what Python developers call PyPI (The Python Package Index) - a repository of software for the Python programming language."
"What are virtualenvs?","A virtualenv is an isolated environment for development, running, and debugging Python code. It isolates a Python interpreter with a set of libraries and settings, allowing multiple applications on a single host, each with their own version of the Python interpreter."
"What are modules and packages in Python?","A module in Python is any file with a `.py` extension. A package is a set of modules - a directory that contains one or many `.py` files, one of which is `__init__.py`."
"Bonus question: Tabs or Spaces?","Author is a spaces zealot. 4 spaces per tab that is. Both answers are correct (spaces is more correct ?). Incorrect answers are 'I don't know', 'I don't care', 'Both', 'Does it matter'."
"What are the ways to write a function using call by reference?","Arguments in Python are passed as an assignment. This assignment creates an object that has no relationship between an argument name in source and target. The procedure to write the function using call by reference includes: def function(a, b): a = 'value'; b = b + 1; return a, b. The use of global variables allows the function to be called as reference but this is not the safe method to call any function. The use of mutable objects allows passing the function by reference."
"What are the commands that are used to copy an object in Python?","The command that is used to copy an object in Python includes: copy.copy(): Returns a shallow copy of the parameter that is passed. copy.deepcopy(): Returns a deep copy of the parameter that is passed."
"What is the difference between deep and shallow copy?","Shallow copy creates a new instance type and keeps the values copied in the new instance. Deep copy stores the values and does not copy reference pointers; changes in the original do not affect the copied object."
"Write a program to find out the name of an object in Python.","The object doesn’t have any name; assignment binds a name to the value. class try: pass; B = try(); a = B; b = a; print(b)."
"How can the ternary operators be used in Python?","The ternary operator is used to show conditional statements: big = x if x < y else y."
"How does a string get converted to a number?","Use built-in functions like int() or float(). For example: int('1') returns 1; float('1') returns 1.0."
"What is the function of negative index?","Negative indices allow access to elements from the end of a sequence. For example, S[:-1] removes the last character."
"Write a program to check whether the object is of a class or its subclass.","Use isinstance() to check an object's class: isinstance(obj, (class1, class2))."
"Explain delegation in Python.","Delegation is an object-oriented technique where a method of one class is replaced with a method from another class while delegating other methods to the original class."
"What is the function of “self”?","self is a reference to the instance of the object itself and is explicitly passed in methods."
"How is “self” explicitly defined in a method?","self is declared in the method definition and allows access to instance variables."
"What is the process of compilation and linking in Python?","Compilation and linking allow new extensions to be compiled and linked properly. Steps include creating a file, placing it in the Modules directory, and running setup commands."
"What is the procedure to extract values from the object used in Python?","Use methods like PyTuple_Size() for tuples and PyList_Size() for lists to extract values."
"What are the steps required to make a script executable on Unix?","Create a script file, set the file mode as executable, and start with #! to indicate the interpreter."
"How does global value mutation used for thread-safety?","The global interpreter lock allows only one thread to run at a time, providing thread safety."
"Write a program to read and write binary data using Python.","Use the struct module to read and write binary data: import struct; f = open(file_name, 'rb'); s = f.read(8); x, y, z = struct.unpack('>hhl', s)."
"What is the process to run subprocess with pipes that connect both input and output?","Use popen2() to run subprocesses while managing input and output streams."
"What are the different ways to generate random numbers?","Use the random module: import random; random.random() generates a random float in [0, 1)."
"Write a program to show the singleton pattern used in Python.","The singleton pattern limits the number of instances of a class: class Singleton: _instance = None; @classmethod; def Handle(cls): if not cls._instance: cls._instance = Singleton(); return cls._instance."
"What is Python? What are the benefits of using Python?","Python is a programming language with objects, modules, threads, exceptions, and automatic memory management. The benefits of Python are that it is simple and easy, portable, extensible, has built-in data structures, and it is open-source."
"What is PEP 8?","PEP 8 is a coding convention, a set of recommendations about how to write your Python code more readable."
"What is pickling and unpickling?","Pickle module accepts any Python object and converts it into a string representation and dumps it into a file using the dump function. This process is called pickling. Unpickling is the process of retrieving original Python objects from the stored string representation."
"How is Python interpreted?","Python language is an interpreted language. Python program runs directly from the source code, converting it into an intermediate language, which is again translated into machine language for execution."
"How is memory managed in Python?","Python memory is managed by a private heap space. All Python objects and data structures are located in a private heap, which the interpreter manages. Python also has an inbuilt garbage collector that recycles unused memory."
"What are the tools that help to find bugs or perform static analysis?","PyChecker is a static analysis tool that detects bugs in Python source code and warns about style and complexity. Pylint verifies whether the module meets coding standards."
"What are Python decorators?","A Python decorator is a specific change made in Python syntax to alter functions easily."
"What is the difference between list and tuple?","The difference is that a list is mutable while a tuple is not. A tuple can be hashed and used as a key for dictionaries."
"How are arguments passed by value or by reference?","Everything in Python is an object, and all variables hold references to the objects. You cannot change the value of references, but you can change mutable objects."
"What are Dict and List comprehensions?","They are syntax constructions to ease the creation of a Dictionary or List based on existing iterables."
"What are built-in types does Python provide?","Python provides two built-in types: Mutable (List, Sets, Dictionaries) and Immutable (Strings, Tuples, Numbers)."
"Explain namespace in Python.","In Python, every name introduced has a place where it lives, known as a namespace. It is like a box where a variable name is mapped to the object."
"What is lambda in Python?","It is a single expression anonymous function often used as an inline function."
"Why do lambda forms in Python not have statements?","A lambda form does not have statements as it is used to make new function objects and return them at runtime."
"Explain pass in Python.","Pass means no-operation Python statement; it is a placeholder in a compound statement where nothing needs to be written."
"In Python what are iterators?","In Python, iterators are used to iterate over a group of elements, such as containers like lists."
"What is the unittest in Python?","A unit testing framework in Python is known as unittest. It supports sharing setups, automation testing, shutdown code for tests, and aggregation of tests into collections."
"Explain slicing in Python.","Slicing is a mechanism to select a range of items from sequence types like lists, tuples, and strings."
"What are generators in Python?","Generators are a way of implementing iterators. They are normal functions except that they yield expressions in the function."
"What is docstring in Python?","A Python documentation string is known as docstring; it is a way of documenting Python functions, modules, and classes."
"How can you copy an object in Python?","To copy an object, you can use `copy.copy()` or `copy.deepcopy()` for the general case."
"What is negative index in Python?","Python sequences can be indexed with positive and negative numbers. For positive index, 0 is the first index, and (-1) is the last index."
"How can you convert a number to a string?","Use the inbuilt function `str()`. For octal or hexadecimal representation, use `oct()` or `hex()`."
"What is the difference between xrange and range?","`xrange` returns the xrange object while `range` returns a list and uses the same memory regardless of the range size."
"What is module and package in Python?","A module is a way to structure a program, while a package is a folder of Python programs that can have modules or subfolders."
"What are the rules for local and global variables in Python?","Local variables are assumed to be local if assigned a new value within a function. Global variables are those only referenced inside a function."
"Explain how can you make a Python Script executable on Unix?","To make a Python script executable on Unix, the script file’s mode must be executable, and the first line must begin with `#!`."
"Explain how to delete a file in Python?","Use the command `os.remove(filename)` or `os.unlink(filename)`."
"Explain how can you generate random numbers in Python?","Import the random module and use `random.random()` to return a random floating-point number in the range [0,1)."
"How can you access a module written in Python from C?","You can access a module written in Python from C by using `Module = PyImport_ImportModule(\"<modulename>\");`."
"What is the use of // operator in Python?","It is a Floor Division operator, used for dividing two operands with the result as a quotient showing only digits before the decimal point."
"Mention five benefits of using Python","1) Python comprises a huge standard library for most Internet platforms. 2) It does not require explicit memory management. 3) Provides easy readability. 4) Easy-to-learn for beginners. 5) Built-in data types save programming time."
"Mention the use of the split function in Python","The split function breaks a string into shorter strings using the defined separator, giving a list of all words present in the string."
"What is the difference between Django, Pyramid, and Flask?","Flask is a microframework for smaller applications, Pyramid is for larger applications providing flexibility, and Django is also for large applications including an ORM."
"Explain Flask and its benefits","Flask is a web micro framework for Python that has little to no dependencies on external libraries, making it light and easier to maintain."
"What is Flask-WTF and what are their features?","Flask-WTF offers simple integration with WTForms, including CSRF protection, internationalization, and file upload support."
"Explain what is the common way for the Flask script to work?","The common way is either by specifying the import path for your application or the path to a Python file."
"Explain how you can access sessions in Flask?","A session allows remembering information from one request to another using a signed cookie."
"Is Flask an MVC model, and if yes give an example showing MVC pattern for your application?","Yes, Flask behaves like an MVC framework. Example: from flask import Flask; app = Flask(__name__); @app.route(\"/\"); def hello(): return \"Hello World\"; app.run(debug=True)."
"Explain database connection in Python Flask?","Flask supports database-powered applications and allows requesting databases in three ways: before_request(), after_request(), and teardown_request()."
"If you have multiple Memcache servers, and one of them fails that contain data, will it try to get them?","The data in the failed server won’t get removed, but auto-failure provisions can be configured for multiple nodes."
"Explain how you can minimize the Memcached server outages in your Python Development?","Minimize cache stampedes, bring up an instance of memcached on a new machine, change the Memcached server list, and set timeout values."
"Explain what is Dogpile effect? How can you prevent this effect?","Dogpile effect occurs when cache expires and multiple requests hit the website simultaneously. It can be prevented using a semaphore lock."
"Explain how memcached should not be used in your Python project?","Memcached should not be used as a data store, as the only source of information, or for security purposes."
"What is Python If Statement?","Python if Statement is used for decision-making operations. It runs the body of code only when the condition is true."
"Explain While loop in Python with example","While loop runs a code block repeatedly as long as the condition is true. Example: x=0; while(x < 4): print(x); x += 1."
"What is enumerate() in Python?","Enumerate() is a built-in function used for assigning an index to each item of an iterable object."
"How can you use for loop to repeat the same statement over and again?","You can use a for loop to repeat statements by iterating over a range or collection."
"What is Tuple Matching in Python?","Tuple Matching is a method of grouping tuples by matching the second element using a dictionary."
"Explain Dictionary in Python with example","A Dictionary is an unordered and changeable collection of data values that holds key-value pairs. Example: Dict = {'Tim': 18, 'Charlie': 12}."
"How can you copy the entire dictionary to a new dictionary?","You can copy the entire dictionary using the copy method: studentX = Boys.copy()."
"How can you Update Python Dictionary?","You can update a dictionary by adding a new key-value pair or modifying an existing entry."
"Give example of dictionary items() method","Dict = {'Tim': 18, 'Charlie': 12}; print(\"Students Name: %s\" % list(Dict.items()))."
"How can you sort elements in Python dictionary?","You can sort dictionary elements using a for loop and the sort method on the list of keys."
"Give an example of Dictionary len() and Python List cmp() method","Dict = {'Tim': 18}; print(\"Length : %d\" % len(Dict))."
"Explain Arithmetic operators with example","Arithmetic Operators perform calculations like addition, subtraction, etc. Example: x = 4; y = 5; print(x + y)."
"Give example of logical operators","Example: a = True; b = False; print(('a and b is', a and b))."
"Explain membership operators with example","Membership operators test for membership in a sequence. Example: if (x in list): print(\"x is available\")."
"Write code to demonstrate operator precedence in Python","v = 4; w = 5; x = 8; y = 2; z = (v+w) * x / y; print(\"Value of (v+w) * x / y is \", z)."
"Explain arrays in Python with example","A Python Array is a collection of the same data type. Example: import array as myarray; abc = myarray.array('d', [2.5, 4.9, 6.7])."
"How can you access array elements?","You can access any array item by using its index. Example: balance = array.array('i', [300, 200, 100]); print(balance[1])."
"How can you insert elements in array?","Use the insert method to add items at a specific index. Example: balance.insert(2, 150)."
"How can you delete elements in array?","Use the remove method to delete an item by value. Example: first.remove(3)."
"How can you search and get the index of a value in an array?","Use the index method to find the index of a value. Example: print(number.index(3))."
"How can you reverse array in Python?","Use the reverse() method to reverse an array. Example: number.reverse()."
"Give example to convert array to Unicode","Example: p = array('u', [u'\\u0050', u'\\u0059']); q = p.tounicode(); print(q)."
"Give an example of a class in Python","class myClass(): def method1(self): print(\"Guru99\"); c = myClass(); c.method1()."
"Explain Inheritance with example","Inheritance allows defining a new class with modifications to an existing class. Example: class childClass(myClass): pass."
"Give example of Python constructors","Example: class User: def __init__(self, name): self.name = name; User1 = User(\"Alex\")."
"How can you access values in string?","Use indexing to access characters in a string. Example: myString = \"Hello\"; print(myString[1])."
"What is __init__?","`__init__` is a constructor method in Python and is automatically called to allocate memory when a new object/instance is created. It helps distinguish methods and attributes of a class from local variables."
"What is the difference between Python Arrays and lists?","Arrays in Python can only contain elements of the same data type (homogeneous), while lists can contain elements of different data types (heterogeneous)."
"Explain how can you make a Python Script executable on Unix?","The script file must begin with `#!/usr/bin/env python`."
"What is slicing in Python?","Slicing is taking parts of a sequence. The syntax is `[start : stop : step]`, where 'start' is the starting index, 'stop' is the ending index, and 'step' is the number of steps to jump."
"What is docstring in Python?","A docstring is a multiline string used to document a specific code segment, describing what the function or method does."
"What are unit tests in Python?","Unit tests are a unit testing framework in Python that tests different components of software separately to identify which component might be responsible for software failure."
"What is break, continue and pass in Python?","Break terminates the loop immediately, continue skips the rest of the code in the current iteration, and pass is a null operation used to fill empty blocks."
"What is the use of self in Python?","Self is used to represent the instance of the class, allowing access to attributes and methods of the class."
"What are global, protected and private attributes in Python?","Global variables are public and defined in the global scope. Protected attributes have an underscore prefix and can be accessed outside the class but should not be. Private attributes have double underscores and cannot be accessed directly from outside the class."
"What are modules and packages in Python?","Modules are Python files with a .py extension that can have functions, classes, or variables defined. Packages allow hierarchical structuring of the module namespace using dot notation."
"What is pass in Python?","The pass keyword represents a null operation in Python, used to fill up empty blocks of code."
"What are the common built-in data types in Python?","Common built-in data types include NoneType, Numeric Types (int, float, complex, bool), Sequence Types (list, tuple, range, str), Mapping Types (dict), Set Types (set, frozenset), Modules, and Callable Types."
"What are lists and tuples? What is the key difference between the two?","Lists and tuples are both sequence data types that can store a collection of objects. The key difference is that lists are mutable (modifiable), while tuples are immutable (cannot be modified)."
"What is Scope in Python?","Scope refers to the block of code where an object remains relevant. Local, global, module-level, and outermost scopes are examples of different scopes in Python."
"What is PEP 8 and why is it important?","PEP 8 is a Python Enhancement Proposal that documents style guidelines for Python code, important for contributing to the Python open-source community."
"What is an Interpreted language?","An interpreted language executes statements line by line. Python is an interpreted language that runs directly from the source code."
"What is a dynamically typed language?","A dynamically typed language checks data types during execution. Python is dynamically typed as it executes each statement line by line."
"What is Python? What are the benefits of using Python?","Python is a high-level, interpreted, general-purpose programming language. Benefits include a simple syntax, high-level data structures, and support for rapid application development."
"What are Dict and List comprehensions?","Comprehensions are syntactic sugar constructs that help build altered and filtered lists, dictionaries, or sets from a given iterable, saving time and code."
"What are decorators in Python?","Decorators are functions that add functionality to existing functions without changing their structure. They are represented by `@decorator_name`."
